@page "/records"
@using FichaAtendimento.Shared.Model
@inject HttpClient Http
@inject NavigationManager NavigationManager

<style>
    .topMenu {
        display: inline;
        margin-right: 30px;
    }

    .infoMsg {
        margin-top: 30px;
    }

    .dropdown {
        margin-bottom: 10px;
    }

    .table td {
        border-bottom: 1px solid black;
        vertical-align: middle;
        text-align: left;
    }
</style>



<div style="display: inline-flex">
    <h1 style="text-decoration:underline" class="topMenu">Session records</h1>
    <button @onclick="@NovaFicha" class="btn btn-primary topMenu">ADD RECORD</button>

</div>

@if (fichas == null || pacientesArr == null)
{
    <div class="infoMsg">
        <h3>There are currently no records!</h3>
    </div>
}
else
{

    <div class="dropdown">
        <select @bind="@pacienteId" name="selecPaciente">
            @foreach (var paciente in sortedPacientesArr)
            {
                <option value="@paciente.idPaciente">@paciente.NomePaciente</option>
            }
        </select>
    </div>


    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Session Summary</th>
                <th>General comments:</th>
                <th>Session Date</th>
                <th>Paid?</th>
                <th>Receipt?</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ficha in FichaPorPaciente().OrderBy(x => x.DataAtendimento))
            {
                <tr>
                    <td>@ficha.NomePaciente</td>
                    <td>@ficha.ResumoAtendimento</td>
                    <td>@ficha.Observacoes</td>
                    <td>@ficha.DataAtendimento.ToShortDateString()</td>
                    <td>
                        @if (ficha.SessaoPaga == true)
                            sessaoPaga = "Sim";
                        else
                            sessaoPaga = "Não";
                        @sessaoPaga
                    </td>
                    <td>
                        @if (ficha.ReciboEntregue == true)
                            reciboEntregue = "Sim";
                        else
                            reciboEntregue = "Não";
                        @reciboEntregue
                    </td>
                    <td>
                        <a class="nav-link" href="EditFicha/@ficha.idFicha">
                            <span class="oi oi-pencil" aria-hidden="true"></span> Edit
                        </a>
                        <a class="nav-link" href="RemoveFicha/@ficha.idFicha">
                            <span class="oi oi-trash" aria-hidden="true"></span> Remove
                        </a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    protected Paciente[]? pacientesArr;
    protected Ficha[]? fichas;
    private IEnumerable<Paciente>? sortedPacientesArr;


    protected override async Task OnInitializedAsync()
    {
        pacientesArr = await Http.GetFromJsonAsync<Paciente[]>("http://localhost:5038/api/Pacientes");
        sortedPacientesArr = pacientesArr.OrderBy(x => x.NomePaciente);

        fichas = await Http.GetFromJsonAsync<Ficha[]>("http://localhost:5038/api/records");

    }

    private string? sessaoPaga;
    private string? reciboEntregue;

    private int pacienteId;
    private IEnumerable<Ficha> FichaPorPaciente()
    {
        var returnedValue = fichas.Where(x => x.idPaciente == pacienteId);
        return returnedValue;
    }

    private void NovaFicha()
    {
        NavigationManager.NavigateTo("/addrecord");
    }
                    }